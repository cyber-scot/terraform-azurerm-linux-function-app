variable "linux_function_apps" {
  type = list(object({
    name                  = string
    location              = string
    service_plan_id       = optional(string)
    tags                  = map(string)
    rg_name               = string
    app_service_plan_name = optional(string)
    os_type               = optional(string, "Linux")
    sku_name              = string
    app_settings = optional(object({
      APPINSIGHTS_INSTRUMENTATIONKEY                       = optional(string)
      APPLICATIONINSIGHTS_CONNECTION_STRING                = optional(string)
      AZURE_FUNCTION_PROXY_DISABLE_LOCAL_CALL              = optional(string)
      AZURE_FUNCTION_PROXY_BACKEND_URL_DECODE_SLASHES      = optional(string)
      AZURE_FUNCTIONS_ENVIRONMENT                          = optional(string)
      AzureFunctionsWebHost__hostid                        = optional(string)
      AzureWebJobsDashboard                                = optional(string)
      AzureWebJobsDisableHomepage                          = optional(string)
      AzureWebJobsDotNetReleaseCompilation                 = optional(string)
      AzureWebJobsFeatureFlags                             = optional(string)
      AzureWebJobsKubernetesSecretName                     = optional(string)
      AzureWebJobsSecretStorageKeyVaultClientId            = optional(string)
      AzureWebJobsSecretStorageKeyVaultClientSecret        = optional(string)
      AzureWebJobsSecretStorageKeyVaultName                = optional(string)
      AzureWebJobsSecretStorageKeyVaultTenantId            = optional(string)
      AzureWebJobsSecretStorageKeyVaultUri                 = optional(string)
      AzureWebJobsSecretStorageSas                         = optional(string)
      AzureWebJobsSecretStorageType                        = optional(string)
      AzureWebJobsStorage                                  = optional(string)
      AzureWebJobs_TypeScriptPath                          = optional(string)
      DOCKER_SHM_SIZE                                      = optional(string)
      ENABLE_ORYX_BUILD                                    = optional(string)
      FUNCTION_APP_EDIT_MODE                               = optional(string)
      FUNCTIONS_EXTENSION_VERSION                          = optional(string)
      FUNCTIONS_NODE_BLOCK_ON_ENTRY_POINT_ERROR            = optional(string)
      FUNCTIONS_V2_COMPATIBILITY_MODE                      = optional(string)
      FUNCTIONS_REQUEST_BODY_SIZE_LIMIT                    = optional(string)
      FUNCTIONS_WORKER_PROCESS_COUNT                       = optional(string)
      FUNCTIONS_WORKER_RUNTIME                             = optional(string)
      FUNCTIONS_WORKER_SHARED_MEMORY_DATA_TRANSFER_ENABLED = optional(string)
      JAVA_OPTS                                            = optional(string)
      languageWorkers__java__arguments                     = optional(string)
      MDMaxBackgroundUpgradePeriod                         = optional(string)
      MDNewSnapshotCheckPeriod                             = optional(string)
      MDMinBackgroundUpgradePeriod                         = optional(string)
      PIP_INDEX_URL                                        = optional(string)
      PIP_EXTRA_INDEX_URL                                  = optional(string)
      PYTHON_ISOLATE_WORKER_DEPENDENCIES                   = optional(string)
      PYTHON_ENABLE_DEBUG_LOGGING                          = optional(string)
      PYTHON_ENABLE_WORKER_EXTENSIONS                      = optional(string)
      PYTHON_THREADPOOL_THREAD_COUNT                       = optional(string)
      SCALE_CONTROLLER_LOGGING_ENABLED                     = optional(string)
      SCM_DO_BUILD_DURING_DEPLOYMENT                       = optional(string)
      SCM_LOGSTREAM_TIMEOUT                                = optional(string)
      WEBSITE_CONTENTAZUREFILECONNECTIONSTRING             = optional(string)
      WEBSITE_CONTENTOVERVNET                              = optional(string)
      WEBSITE_CONTENTSHARE                                 = optional(string)
      WEBSITE_DNS_SERVER                                   = optional(string)
      WEBSITE_ENABLE_BROTLI_ENCODING                       = optional(string)
      WEBSITE_FUNCTIONS_ARMCACHE_ENABLED                   = optional(string)
      WEBSITE_MAX_DYNAMIC_APPLICATION_SCALE_OUT            = optional(string)
      WEBSITE_NODE_DEFAULT_VERSION                         = optional(string)
      WEBSITE_OVERRIDE_STICKY_DIAGNOSTICS_SETTINGS         = optional(string)
      WEBSITE_OVERRIDE_STICKY_EXTENSION_VERSIONS           = optional(string)
      WEBSITE_RUN_FROM_PACKAGE                             = optional(string)
      WEBSITE_SKIP_CONTENTSHARE_VALIDATION                 = optional(string)
      WEBSITE_SLOT_NAME                                    = optional(string)
      WEBSITE_TIME_ZONE                                    = optional(string)
      WEBSITE_USE_PLACEHOLDER                              = optional(string)
      WEBSITE_VNET_ROUTE_ALL                               = optional(string)
    }))
    https_only                    = optional(bool)
    builtin_logging_enabled       = optional(bool)
    client_certificate_enabled    = optional(bool)
    client_certificate_mode       = optional(string)
    daily_memory_time_quota       = optional(number)
    enabled                       = optional(bool)
    functions_extension_version   = optional(string)
    storage_account_name          = optional(string)
    storage_account_access_key    = optional(string)
    storage_key_vault_secret_id   = optional(string)
    storage_uses_managed_identity = optional(bool)
    site_settings = optional(object({
      always_on                                     = optional(bool)
      api_definition_url                            = optional(string)
      api_management_api_id                         = optional(string)
      app_command_line                              = optional(string)
      application_insights_connection_string        = optional(string)
      application_insights_key                      = optional(string)
      container_registry_managed_identity_client_id = optional(string)
      container_registry_use_managed_identity       = optional(bool)
      elastic_instance_minimum                      = optional(number)
      ftps_state                                    = optional(string)
      health_check_path                             = optional(string)
      health_check_eviction_time_in_min             = optional(number)
      http2_enabled                                 = optional(bool)
      load_balancing_mode                           = optional(string)
      managed_pipeline_mode                         = optional(string)
      minimum_tls_version                           = optional(string)
      pre_warmed_instance_count                     = optional(number)
      remote_debugging_enabled                      = optional(bool)
      remote_debugging_version                      = optional(string)
      runtime_scale_monitoring_enabled              = optional(bool)
      scm_minimum_tls_version                       = optional(string)
      scm_use_main_ip_restriction                   = optional(bool)
      use_32_bit_worker                             = optional(bool)
      app_scale_limit                               = optional(number)
      websockets_enabled                            = optional(bool)
      vnet_route_all_enabled                        = optional(bool)
      worker_count                                  = optional(number)
      default_documents                             = optional(list(string))
      application_stack = optional(object({
        java_version            = optional(string)
        dotnet_version          = optional(string)
        node_version            = optional(string)
        python_version          = optional(string)
        powershell_core_version = optional(string)
        use_custom_runtime      = optional(bool)
        docker = optional(object({
          registry_url      = optional(string)
          registry_username = optional(string)
          registry_password = optional(string)
          image_name        = optional(string)
          image_tag         = optional(string)
        }))
      }))
      app_service_logs = optional(object({
        disk_quota_mb         = optional(number)
        retention_period_days = optional(number)
      }))
      cors = optional(object({
        allowed_origins     = optional(list(string))
        support_credentials = optional(bool)
      }))
      ip_restriction = optional(list(object({
        ip_address                = optional(string)
        service_tag               = optional(string)
        virtual_network_subnet_id = optional(string)
        name                      = optional(string)
        priority                  = optional(number)
        action                    = optional(string)
        headers = optional(object({
          x_azure_fdid     = optional(string)
          x_fd_health_prob = optional(string)
          x_forwarded_for  = optional(string)
          x_forwarded_host = optional(string)
        }))
      })))
      scm_ip_restriction = optional(list(object({
        ip_address                = optional(string)
        service_tag               = optional(string)
        virtual_network_subnet_id = optional(string)
        name                      = optional(string)
        priority                  = optional(number)
        action                    = optional(string)
        headers = optional(object({
          x_azure_fdid     = optional(string)
          x_fd_health_prob = optional(string)
          x_forwarded_for  = optional(string)
          x_forwarded_host = optional(string)
        }))
      })))
      auth_settings = optional(object({
        enabled                        = optional(bool)
        additional_login_parameters    = optional(map(string))
        allowed_external_redirect_urls = optional(list(string))
        default_provider               = optional(string)
        issuer                         = optional(string)
        runtime_version                = optional(string)
        token_refresh_extension_hours  = optional(number)
        token_store_enabled            = optional(bool)
        unauthenticated_client_action  = optional(string)
        active_directory = optional(object({
          client_id         = optional(string)
          client_secret     = optional(string)
          allowed_audiences = optional(list(string))
        }))
        facebook = optional(object({
          app_id       = optional(string)
          app_secret   = optional(string)
          oauth_scopes = optional(list(string))
        }))
        google = optional(object({
          client_id     = optional(string)
          client_secret = optional(string)
          oauth_scopes  = optional(list(string))
        }))
        microsoft = optional(object({
          client_id     = optional(string)
          client_secret = optional(string)
          oauth_scopes  = optional(list(string))
        }))
        twitter = optional(object({
          consumer_key    = optional(string)
          consumer_secret = optional(string)
        }))
        github = optional(object({
          client_id                  = optional(string)
          client_secret              = optional(string)
          client_secret_setting_name = optional(string)
          oauth_scopes               = optional(list(string))
        }))
      }))
      connection_string = optional(list(object({
        name  = optional(string)
        type  = optional(string)
        value = optional(string)
      })))
      sticky_settings = optional(object({
        app_setting_names       = optional(list(string))
        connection_string_names = optional(list(string))
      }))
      backup = optional(object({
        name                = optional(string)
        enabled             = optional(bool)
        storage_account_url = optional(string)
        schedule = optional(object({
          frequency_interval       = optional(number)
          frequency_unit           = optional(string)
          keep_at_least_one_backup = optional(bool)
          retention_period_days    = optional(number)
          start_time               = optional(string)
        }))
      }))
      identity_ids  = optional(list(string))
      identity_type = optional(string)
    }))
    enable_vnet_integration = optional(bool)
    subnet_id               = optional(string)
  }))
  default     = []
  description = "A list of Linux function apps to be made"
}
